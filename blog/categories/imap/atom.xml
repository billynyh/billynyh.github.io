<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: imap | Just code it]]></title>
  <link href="http://billynyh.github.io//blog/categories/imap/atom.xml" rel="self"/>
  <link href="http://billynyh.github.io//"/>
  <updated>2015-08-11T05:33:37+08:00</updated>
  <id>http://billynyh.github.io//</id>
  <author>
    <name><![CDATA[Billy Ng]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Connect 163.com with Javamail]]></title>
    <link href="http://billynyh.github.io//blog/2015/05/16/javamail-163/"/>
    <updated>2015-05-16T17:09:41+08:00</updated>
    <id>http://billynyh.github.io//blog/2015/05/16/javamail-163</id>
    <content type="html"><![CDATA[<p>Last week I was working on supporting more IMAP email service provider in our app. 163.com is a popular email service used in China, so we created a test account to play around with it.</p>

<p>We already have code working on various email service like yahoo and outlook, so I expect it should not be any problem to connect 163.com, maybe a few custom handling on simplified Chinese.</p>

<p>However, when I try to make connection to IMAP server, I got</p>

<pre><code>NO SELECT The login is not safe! Please update your mail client: http://mail.163.com/dashi
</code></pre>

<p>and the link provided goes to the download page of 163&rsquo;s official app.</p>

<p>It would be sad if 163 somehow limited the IMAP usage to certain apps but let&rsquo;s not jump to conclusion so fast. After some research, we found that Gmail android app can actually login to 163 account, and that&rsquo;s the only one we found so far. Googled around and see others met similar problem and found one interesting (and wtf) workaround.</p>

<p><a href="https://github.com/dinhviethoa/libetpan/pull/190">https://github.com/dinhviethoa/libetpan/pull/190</a>
<a href="https://github.com/dinhviethoa/libetpan/commit/050f15f30ce40c02d4cf0a9389baca77dec19230">https://github.com/dinhviethoa/libetpan/commit/050f15f30ce40c02d4cf0a9389baca77dec19230</a></p>

<p><img src="/images/posts/20150516/imap-163.jpg" width="600px" /></p>

<p>So what does that workaround do? IMAP command is usually in the format</p>

<pre><code>1 CAPABILITY 
2 LOGIN USERNAME PASSWORD 
3 CAPABILITY 
4 LIST "" "" 
5 ID NIL 
6 SELECT INBOX  
</code></pre>

<p>but 163 required a &ldquo;C&rdquo; before each command, eg</p>

<pre><code>C1 CAPABILITY
</code></pre>

<p>so the fix is&hellip; add &ldquo;C&rdquo;.</p>

<p>To apply to Javamail, we need to modify the Protocol object&rsquo;s writeCommand method and use a &ldquo;C&rdquo; prefix for 163 (also 126.com, yeah.net) imap host address.</p>
]]></content>
  </entry>
  
</feed>
