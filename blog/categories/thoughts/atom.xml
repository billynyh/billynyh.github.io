<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: thoughts | Just code it]]></title>
  <link href="http://billynyh.github.io//blog/categories/thoughts/atom.xml" rel="self"/>
  <link href="http://billynyh.github.io//"/>
  <updated>2014-04-07T22:02:27+08:00</updated>
  <id>http://billynyh.github.io//</id>
  <author>
    <name><![CDATA[Billy Ng]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Move fast and break things]]></title>
    <link href="http://billynyh.github.io//blog/2014/04/07/move-fast-break-things/"/>
    <updated>2014-04-07T21:45:34+08:00</updated>
    <id>http://billynyh.github.io//blog/2014/04/07/move-fast-break-things</id>
    <content type="html"><![CDATA[<h2>Who said that</h2>

<p>Mark Zuckerberg <a href="http://www.wired.com/2012/02/zuck-letter">did</a>.</p>

<p><blockquote><p>Moving fast enables us to build more things and learn faster. However, as most companies grow, they slow down too much because they’re more afraid of making mistakes than they are of losing opportunities by moving too slowly. We have a saying: “Move fast and break things.” The idea is that if you never break anything, you’re probably not moving fast enough.</p></blockquote></p>

<p>I totally agree on the idea. However, like doing startups, the idea is important but what really matter is <strong>execution</strong>. How do you interpret &ldquo;move fast and break things&rdquo; affects the direction of the team. If you are in the wrong direction and move fast, there is no guarantee that you can go back to where you were even you &ldquo;move fast&rdquo; again.</p>

<h2>Be able to move fast</h2>

<p>Depends on the scale of your product, there should be different way to move fast. For new product or just a prototype, you should collect user feedbacks, move fast, break things, <strong>get on the right direction</strong> as soon as possible. That is the speed you needed to survive in the industry.</p>

<p>What&rsquo;s next? You have some users, using your app everyday, but not yet the giant scale. To get more users, you need to keep moving and this is another type of moving fast. This time, you cannot just move fast and break things like the time when you start. From development point of view, as the code complexity increase, unless you have a good infrastructure, you will find that it is getting harder and harder to add features on top of it. When you add one feature, you may introduce two bugs, and slowed the app down at the same time. Beside that, there is a cost when you break things, maybe get some bad rating, maybe pissed off some users.</p>

<p>This does not mean you should not move fast, but you have to <strong>do it smart</strong>. You have to be clear on what you want to achieve from moving fast. If you want to try out new interface and get user feedback, it does not need to be 100% polished, but don&rsquo;t rollout a 20% done ugly version, all you can get is bad rating instead of constructive feedback about the new features.</p>

<p>I agree on moving fast, but I also believe in &ldquo;<strong>less is more</strong>&rdquo; (slow is fast?). At the end of the day, it is all about what the users want, new features may boost your number a little bit, but sometimes quality is what makes the users come back and use your app and not switching to other competitors.</p>

<p>Instead of running on your foot, isn&rsquo;t it better to get a bike or a car if you want to move fast?</p>

<h2>When you break things</h2>

<p>Please, <strong>fix it</strong>, before you break another thing.</p>

<h2>Reference</h2>

<ul>
<li><a href="http://www.wired.com/2012/02/zuck-letter">Mark Zuckerberg’s Letter to Investors</a></li>
<li><a href="http://venturebeat.com/2012/06/26/facebook-hacker-stories/">Move fast, break things: Four stories for hackers from Facebook</a></li>
<li><a href="http://spectrum.ieee.org/at-work/innovation/facebook-philosophy-move-fast-and-break-things">Facebook Philosophy: Move Fast and Break Things</a></li>
<li><a href="http://mashable.com/2014/03/13/facebook-move-fast-break-things/">Are Facebook&rsquo;s &lsquo;Move Fast and Break Things&rsquo; Days Over?</a></li>
<li><a href="http://startupbitsnbobs.com/2014/04/04/move-fast-and-break-things/">Startup就是一窩老鼠</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[The gatekeeper]]></title>
    <link href="http://billynyh.github.io//blog/2014/03/24/gatekeeper/"/>
    <updated>2014-03-24T23:11:56+08:00</updated>
    <id>http://billynyh.github.io//blog/2014/03/24/gatekeeper</id>
    <content type="html"><![CDATA[<p>Recently read some articles from <a href="https://medium.com/the-year-of-the-looking-glass">Julie Zhuo&rsquo;s</a>, she is a Product design director in Facebook. Although her posts are not about engineering, I still feel connected with most of the topics. I wrote some of my thoughts originally, but I think just put the quotes here is enough.</p>

<p><a href="https://medium.com/the-year-of-the-looking-glass/5c48db173662">&ldquo;Don&rsquo;t be a gatekeeper&rdquo;</a></p>

<p><blockquote><p>If you are somebody with an incredible amount of passion for high quality, you may be compelled to become a gatekeeper at some point in your life.</p></blockquote></p>

<p><blockquote><p>If you are a gatekeeper or find yourself thinking we need a gatekeeper, the thing that is broken or missing is trust. So instead of judging yes or no, good or bad, consider this instead: what could I do to make it so that I have more trust in the people around me?</p></blockquote></p>

<p><a href="https://medium.com/the-year-of-the-looking-glass/d0aa3b8af9b7">&ldquo;Why Designers Leave&rdquo;</a></p>

<p><blockquote><p>Every person who works in a creative field has an aspiration for her work, a yearning for that ideal plane which is the culmination of her taste.</p></p><p><p>When an environment fails, over and over and over again, to provide her with a means to follow her internal compass, then she will leave.</p></p><p><p>If you are in a position to influence that kind of environment, take heed. Lay the foundations for a space that nurtures, that yields the kind of work the best creative people can be proud of.</p></blockquote></p>

<p><a href="https://medium.com/the-year-of-the-looking-glass/bcddf7c85553">&ldquo;Quality is not a tradeoff&rdquo;</a></p>

<p><blockquote><p>Quality is a bar, not a tradeoff.</p></blockquote></p>

<p><blockquote><p>It just doesn’t work like that.</p></p><p><p>Why? Because to create high-quality work, there has to be a minimum acceptable bar. And high-quality creators cannot trade off below that bar. They simply can’t.</p></blockquote></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Where Do You See Yourself in 5 Years - Why]]></title>
    <link href="http://billynyh.github.io//blog/2014/03/16/5yr-part-2-why/"/>
    <updated>2014-03-16T22:55:02+08:00</updated>
    <id>http://billynyh.github.io//blog/2014/03/16/5yr-part-2-why</id>
    <content type="html"><![CDATA[<p>It may be better in these two years, but back in 2008, people always say Hong Kong is not a good place for tech, especially for web startup. I agree, the whole environment, atmosphere, values put the industry in a big disadvantage. For example, in Hong Kong, you can make better living by doing financial related jobs, and usually have a stabler career path compared to being a programmer.</p>

<p>There is no one to blame. It is normal that a city puts more focus on some area, and has lower priority on others. Yes, HK government sometimes mention IT is one of their important industry, but do you really think the government has what it takes to do anything to help local startup on this fast changing world? I am not judging the government policy/work, I just think it is not their business.</p>

<h2>Why stay in Hong Kong</h2>

<p>So, why don&rsquo;t just go? Before I started everything, I had a short internship in Shanghai. As I mentioned in previous post, I was totally not prepared before graduate, so this internship kind of affected how I see the industry and the live of being a developer outside Hong Kong. It was a mixed experience, I did not do well, I can&rsquo;t say I enjoyed it a lot, but I did open my eye and started thinking how should I go from that point.</p>

<p>I also had an interview in US, it was a no again. I believe I would just leave HK if I got the job and things would go in a completely different way, but I am still proud of what happened next. It sounds like I was stuck in Hong Kong with no choice, there is always choices, I could keep applying but why give up Hong Kong without a try? Even the industry was bad here, I need to know how bad is it.</p>

<h2>Why work in startups</h2>

<p>From my short internship experience, I learned that if you work in a big team, most likely you will be limited to the tech they already using, it is not a bad thing since you can get deep knowledge in that area, but I was not sure if it was good for me in that time. Touching different latest technologies in development is important to me, it shows how the developers around the world work and keeps you in the trend. You can always try out new stuff in your own time, but as newbie like me, I will need to spend my own time on catching up work. Therefore, working in a (new/small) startup that opens to different technologies would be a best fit to me.</p>

<p>In terms of earnings, working in startup would probably at the bottom of the list amount the jobs required similar skill level. Mathematically you can say you had the possibility of going big in a startup but 0 chance of not doing that. But if this is really the reason of doing startup, you are either very confident in yourself and your team, or you are not go at math&hellip;</p>

<p>There is no doubt that I want the startup I am working in goes big one day, but it is not the only thing I care. Besides the result, I value the process even higher. What working in startup means to me is, even you are in a small team and do not have many resources compare to big companies, you can still do something big. To do that, you need to optimize the time, tools, resource you have and keep challenge your team to improve.</p>

<h2>What&rsquo;s next</h2>

<p>After working in different startups for 5 years, I think I am still learning and improving as an engineer. I believe someday when I am more experienced and my skill reached certain level, I may have a different view of everything. I am looking forward for what will happen on me and the industry in the next 5 years.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Where do you see yourself in 5 years - How I started]]></title>
    <link href="http://billynyh.github.io//blog/2014/03/08/5yr-part-1/"/>
    <updated>2014-03-08T22:41:19+08:00</updated>
    <id>http://billynyh.github.io//blog/2014/03/08/5yr-part-1</id>
    <content type="html"><![CDATA[<h2>5 years ago</h2>

<p><strong>Where do you see yourself in 5 years</strong>. This was the very first question I got asked in an interview after graduated from university in 2008. I started as a web developer, also touched a little bit iOS. Then I decided to focus on Android and now I am a pure Android developer, nothing close to an expert, but I know what I can do and I am confident in my work.</p>

<p>Of course I did not picture me being Android developer 5 years ago, but other than that, I did foresee myself focused on one area instead of touching everything. Not saying that I am now Android only, but if there is one thing I have better knowledge compare to others in my team, it would be Android.</p>

<div style="background:#ccc; padding:20px">
<p style="text-align:center">
<img src="/images/posts/20140308/five-years.png"/></p>
<p style="text-align:right"><a href="http://xkcd.com/1088/">Source: xkcd</a></p>
</div>


<p>Back in 2008, I enjoyed my 3 years programming competition life and knew absolutely nothing about the real world. I wanted to be a software engineer but had no idea what its like before I graduated (I am not saying it is a bad thing, having work experience before graduate means very little to me, but you may feel a little bit lost at the beginning). I even didn&rsquo;t prepare for that interview, or you can say, that interview was my preparation of the next interview.</p>

<p>My first reaction on that 5yr question was like, I know nothing about your company, most likely I will not be there 5 years later, what should I say? Is it a trick question? As expected, I did not get the job but this question stays in my head through out the years.</p>

<p>After some friends' referral and meeting different people, I joined a new, small and passionate &ldquo;startup + software house&rdquo; team and started my developer life. I started as a web developer, learning all kind of web tech through client projects, first did some Wordpress theme, then some rails, python and mongodb. Doing projects with different languages and frameworks gave me a chance to play with latest tech outside and most importantly, pushed my learning skill.</p>

<h2>Android</h2>

<p>Around that time, iPhone was in a very good trend and we started to have some iOS projects. Even I participated in some, I was not a big fan of smart phone as I was already with my computer all day.</p>

<p>In 2010, I got my first smart phone, Google Nexus One, it did not magically changed how I see smart phone in a short time. I actually was still not so convinced by the idea of smart phone in the first few months. What happened was that, one day we decided to play with the Android sdk and build something we want (and simple). This was mainly for fun, and also to let us had a taste of Android development so we might take some Android project in the future.</p>

<p>We decided to make a camera app as side project, because we did see some good camera apps on iOS but those on Android were not compareable to them. Turned out it is nothing close to simple, or I should say, it was one of the hardest thing you can do within the computing power at that time. We spent one week to have our first prototype, everything was ugly, but we just put it on Android market right away. We did not know what to expect, but we were happy to see people actually enjoyed our app. Then I started maintaining the app in my own time and took that chance to catch up with the latest Android development. We learned a lot from building that app, it is a long story so I will not include it here.</p>

<h2>Leaving the comfort zone</h2>

<p>I stayed in my first company for 3 years. Although we did not go big or have any crazy viral product, we survived, which I think already is an achievement in Hong Kong. I enjoy being a (big) part of the team but I started thinking that 5 years question. I could basically see how I would be if nothing changed and I was not sure if it is what I want. There were other considerations but in short, I decided to leave my comfort zone. I quited my job in early 2012, took a little break and threw myself back to the market.</p>

<p>This time, I started as an Android developer.</p>
]]></content>
  </entry>
  
</feed>
